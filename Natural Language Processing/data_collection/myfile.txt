







.spinner, .spinner .status {
  position: relative;
}
.spinner {
  margin-top: 1em;
  margin-bottom: 1em;
}
.spinner .status {
  top: 2px;
  margin-left: 0.5em;
}
.spinner .status:empty {
  display: none;
}
.spinner.lg .graphic {
  border-width: 3px;
  height: 32px;
  width: 32px;
}
.spinner.tiny {
  height: 10px;
  width: 10px;
}
.spinner.centered, .spinner.vcentered {
  box-sizing: border-box;
  width: 100%;
}
.spinner.vcentered {
  left: 0;
  margin-top: -12px;
  position: absolute;
  right: 0;
  text-align: center;
  top: 50%;
}
.spinner .graphic, .ajax-loading-image {
  animation: spin 1.2s infinite linear;
  box-sizing: border-box;
  border-color: #eee;
  border-radius: 50%;
  border-style: solid;
  border-top-color: #666;
  border-top-style: solid;
  border-width: 2px;
  content: "";
  display: inline-block;
  height: 20px;
  position: relative;
  vertical-align: middle;
  width: 20px;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
  }
}

























{
  "@context": "http://schema.org",
  "@type": "Organization",
  "name": "Strava",
  "url": "https://www.strava.com/",
  "logo": "https://d3nn82uaxijpm6.cloudfront.net/assets/brands/strava/logo-strava-lg-5671105ffddb86e437bb68503a4973e8bf07e2a41c0b332d3e3bced21d537e98.png",
  "sameAs": [
    "https://facebook.com/Strava",
    "https://twitter.com/strava",
    "https://instagram.com/strava",
    "https://youtube.com/stravainc",
    "https://blog.strava.com",
    "https://github.com/strava",
    "https://medium.com/strava-engineering"
  ]
}








Strava Runner Profile | Vasileios Tsakalos































{
  "@context": "http://schema.org",
  "@type": "Person",
  "name": "Vasileios Tsakalos",
  "description": "Vasileios Tsakalos is a runner using Strava. Join Strava to track your activities, analyze your performance, and follow friends.  Strava members can plan routes, participate in motivating challenges, and join clubs.  Get started by signing up for free.",
  "memberOf": "Strava",
  "url": "https://www.strava.com/athletes/44711221",
  "image": "https://graph.facebook.com/2343435825752148/picture?height=256&amp;width=256"
}




  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push(
    {'gtm.start': new Date().getTime(),event:'gtm.js'}
    );var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','googleTagManagerDataLayer', "GTM-TP845S");


  !function(options){
    window.Strava = window.Strava || {};
    var _enabled = true;
    var _snowplow = true;
    var _options = options;
    var _ready = null;
    var _snowplowReady = null;
  
    window.Strava.ExternalAnalytics = window.Strava.ExternalAnalytics || (
      {
        isEnabled: function() {
          return _enabled;
        },
        snowplowEnabled: function() {
          return _snowplow;
        },
        isDebug: function() {
          return _options.debug;
        },
        track: function() {
          if(this.isEnabled()) {
            analytics.track.apply(analytics, arguments)
            this.log('%ctrack %O', arguments)
          }
        },
        trackV2: function(event) {
          var eventData = {
            'category': event.category,
            'page': event.page,
            'action': event.action,
            'element': event.element || null,
            'properties': event.properties || {}
          }
          if (this.snowplowEnabled()) {
            snowplow('trackSelfDescribingEvent', {
              schema: 'iglu:com.strava/track/jsonschema/1-0-0',
              data: eventData
            });
          } else {
            !!console.table && console.table(eventData);
          }
          this.track(event.category, eventData);
        },
        page: function(category, name, properties, options) {
          if(this.isEnabled()) {
            var _category = category;
            var _name = name;
            if(!_name) {
              _name = category;
              _category = null;
            }
            var _properties = properties || {};
            _properties.is_mobile = _options.is_mobile;
            _properties.mobile_os = _options.os;
            _properties.athlete_id = _options.athlete_id;
            _properties.locale = _options.locale;
            analytics.page(_category, _name, _properties, options)
            this.log('%canalytics %O', [_category, _name, _properties, options])
          }
          if(this.snowplowEnabled()) {
            snowplow('trackPageView');
          }
        },
        trackLink: function() {
          if(this.isEnabled()) {
            analytics.trackLink.apply(analytics, arguments)
            this.log('%cattaching to track link %O', arguments)
          }
        },
        trackForm: function() {
          if(this.isEnabled()) {
            analytics.trackForm.apply(analytics, arguments);
            this.log('%cattaching to track form %O', arguments);
          }
        },
        identifyV2: function(athleteId, options, eventName) {
          if (this.snowplowEnabled()) {
            var properties = options || {}
            properties.athlete_id = athleteId;
            var eventData = {
              'category': 'identify',
              'page': null,
              'action': eventName,
              'element': null,
              'properties': properties
            };
            snowplow('trackSelfDescribingEvent', {
              schema: 'iglu:com.strava/track/jsonschema/1-0-0',
              data: eventData
            });
          }
          this.identify(athleteId, options);
        },
        identify: function() {
          if(this.isEnabled()) {
            analytics.identify.apply(analytics, arguments);
            this.log('%cidentify(%O)', arguments);
          }
        },
        reset: function() {
          if(this.isEnabled()) {
            analytics.reset.apply(analytics, arguments);
            this.log('%creset(%O)', arguments);
          }
          if(this.snowplowEnabled()) {
            snowplow('setUserId', null)
            var spCookie = document.cookie.match('_sp_id\\.[a-f0-9]+')
            if(spCookie != null) {
              document.cookie = spCookie[0] + "= ; expires = Thu, 01 Jan 1970 00:00:00 GMT"
            }
          }
        },
        setupSnowplow: function(id) {
          if(this.snowplowEnabled()) {
            snowplow("newTracker", "cf", "c.strava.com", {
              appId: "strava-web",
              platform: "web"
            });
            snowplow('setUserId', id);
          }
        },
        anonymousId: function() {
          var d = jQuery.Deferred();
          if (this.isEnabled()) {
            if (!_ready) {
              _ready = jQuery.Deferred();
              analytics.ready(function(){
                _ready.resolve(analytics.user().anonymousId());
              });
            }
            _ready.always(function(anonymousId){
              d.resolve(anonymousId);
            });
          } else {
            d.reject(null);
          }
          return d;
        },
        getDomainUserId: function() {
          var d = jQuery.Deferred();
          if (this.snowplowEnabled()) {
            if (!_snowplowReady) {
              _snowplowReady = jQuery.Deferred();
              snowplow(function(){
                _snowplowReady.resolve(this.cf.getDomainUserId());
              });
            }
            _snowplowReady.always(function(getDomainUserId){
              d.resolve(getDomainUserId);
            });
          } else {
            d.reject(null);
          }
          return d;
        },
        log: function(message, values) {
          if(this.isDebug()) {
            console.log(message, 'background-color: yellow; color: blue; font-size: medium;', values);
          }
        },
        debug: function(value) {
          _options.debug = value;
        }
      }
    )
  }({
    is_mobile: false,
    os: "",
    debug: false,
    athlete_id: null,
    locale: "en-US"
  });


  !function(){
    var analytics = window.analytics = window.analytics || [];
    if(!analytics.initialize) {
      if(analytics.invoked) {
        window.console && console.error && console.error("Segment snippet included twice.");
      } else {
        analytics.invoked = !0;
        analytics.methods = ["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","debug","page","once","off","on"];
        analytics.factory = function(t) {
          return function() {
            var e = Array.prototype.slice.call(arguments);
            e.unshift(t);
            analytics.push(e);
            return analytics
          }
        };
        for(var t = 0; t < analytics.methods.length; t++) {
          var e = analytics.methods[t];
          analytics[e] = analytics.factory(e)
        }
        analytics.load = function(t) {
          var e = document.createElement("script");
          e.type = "text/javascript";
          e.async = !0;
          e.src = ("https:" === document.location.protocol ? "https://" : "http://") + "cdn.segment.com/analytics.js/v1/" + t + "/analytics.min.js";
          var n = document.getElementsByTagName("script")[0];
          n.parentNode.insertBefore(e,n)
        };
        analytics.SNIPPET_VERSION = "4.0.0";
        analytics.load("4U9hx9LX3VDSlP3o5AoG4vHoGdJY340J");
  
        if (true) {
          (function(p,l,o,w,i,n,g){if(!p[i]){p.GlobalSnowplowNamespace=p.GlobalSnowplowNamespace||[];p.GlobalSnowplowNamespace.push(i);p[i]=function(){(p[i].q=p[i].q||[]).push(arguments)};p[i].q=p[i].q||[];n=l.createElement(o);g=l.getElementsByTagName(o)[0];n.async=1;n.src=w;g.parentNode.insertBefore(n,g)}}(window,document,"script","https://dy9z4910shqac.cloudfront.net/1oG5icild0laCtJMi45LjA.js","snowplow"));
          Strava.ExternalAnalytics.setupSnowplow();
        }
  
        if(Strava.ExternalAnalytics.isDebug()) {
          analytics.debug();
        } else {
          analytics.debug(false);
        }
  
        Strava.ExternalAnalytics.page(null, null, null);
      }
    }
  }();


  !function(debug){
    window.Strava = window.Strava || {};
  
    var _enabled = true;
    var _debug = !!debug;
    var _branchData = null;
  
    window.Strava.BranchIO = window.Strava.BranchIO || (
      {
        isEnabled: function() {
          return _enabled;
        },
        isDebug: function() {
          return _debug;
        },
        dataToLocalStorage: function() {
          if (!_branchData) {
            _branchData = new Strava.BranchAnalytics.BranchData();
          }
  
          var d = this.data()
          var that = this;
          d.done(function(data) {
            that.log('storing data %o to local storage', data)
            _branchData.data(data)
          });
          d.fail(function(message) {
            that.log('failed to retrieve data from branch');
            _branchData.data({})
          });
          return d;
        },
        createLink: function(options) {
          var d = jQuery.Deferred();
          var data = null;
          const that = this;
          var callback = function(e, l) {
            if (!e) {
              d.resolve(l);
            } else {
              d.reject(e);
            }
          }
          if (options.peek_data) {
            data = this.dataFromLocalStorage();
            if (data && data.data_parsed && data.data_parsed['~referring_link']) {
              d.resolve(data.data_parsed['~referring_link']);
            } else {
              d.reject();
            }
          } else {
  
            Strava.ExternalAnalytics
              .anonymousId()
              .always(function(anonymousId){
                if (anonymousId) {
                  options.data['anonymousId'] = anonymousId;
                }
  
                Strava.ExternalAnalytics
                  .getDomainUserId()
                  .always(function(domainUserId){
                    if (domainUserId) {
                      options.data['domainUserId'] = domainUserId;
                    }
  
                    if(that.isEnabled()) {
                      branch.link(options, callback);
                    };
                });
            });
          }
          return d;
        },
        dataFromLocalStorage: function() {
          if (!_branchData) {
            _branchData = new Strava.BranchAnalytics.BranchData();
          }
          return _branchData.data();
        },
        clearLocalStorage: function() {
          if (!_branchData) {
            _branchData = new Strava.BranchAnalytics.BranchData();
          }
          _branchData.data({});
        },
        data: function(checkLocalStorage) {
          var d = jQuery.Deferred();
          var that = this;
          var c = function(message, meta_data) {
            var storedData = null;
  
            if(message) {
              d.reject(message);
            } else {
              if (checkLocalStorage == true && (meta_data == null || meta_data.data == "" || meta_data.data == null)) {
                storedData = that.dataFromLocalStorage();
                that.clearLocalStorage();
  
                d.resolve(storedData);
              } else {
                d.resolve(meta_data);
              }
            }
          };
  
          if(this.isEnabled()) {
            branch.data(c);
            this.log('%cdata (branch enabled)');
          } else {
            this.log('%cdata (branch disabled)');
            d.resolve({});
          }
          return d;
        },
        identify: function(athleteId) {
          var callback = function(error, data) {
            if (error) {
              console.log(error);
            }
          }
          if(this.isEnabled()) {
            branch.setIdentity(athleteId, callback);
          }
        },
        track: function(eventName, metaData) {
          var callback = function(error, data) {
            if (error) {
              console.log(error);
            }
          }
          if(this.isEnabled()) {
            branch.track(eventName, metaData, callback);
          }
        },
        log: function(message, values) {
          if(this.isDebug()) {
            console.log(message, 'background-color: yellow; color: blue; font-size: medium;', values);
          }
        },
        debug: function(value) {
          _debug = value;
        }
      }
    )
  }(false);


  (function(b,r,a,n,c,h,_,s,d,k){if(!b[n]||!b[n]._q){for(;s<_.length;)c(h,_[s++]);d=r.createElement(a);d.async=1;d.src="https://cdn.branch.io/branch-latest.min.js";k=r.getElementsByTagName(a)[0];k.parentNode.insertBefore(d,k);b[n]=h}})(window,document,"script","branch",function(b,r){b[r]=function(){b._q.push([r,arguments])}},{_q:[],_v:1},"addListener applyCode banner closeBanner creditHistory credits data deepview deepviewCta first getCode init link logout redeem referrals removeListener sendSMS setBranchViewData setIdentity track validateCode".split(" "), 0);
  branch.init("key_live_lmpPsfj2DP8CflI4rmzfiemerte7sgwm", {});












Strava
Free app for Android and iPhone


Download







Strava

Menu



Mobile


Features


Summit


Blog




Sign Up




Log In














Our Community




About




Strava Community Standards




Careers




Pros on Strava






Follow




Blog




Facebook




Instagram




Twitter






Support




Contact




Community Forum




About Our Maps







Business






Mobile






Summit





More




Mobile




Summit




Business










Privacy Policy

|

Terms and Conditions



© 2020 Strava






<div class='lightbox-window modal-content'>
<div class='close-lightbox'>
<button class='btn btn-unstyled btn-close'>
<div class='app-icon icon-close icon-xs icon-white'></div>
</button>
</div>
</div>


<div class='popover'></div>


  window._asset_host = "https://d3nn82uaxijpm6.cloudfront.net";
  window._measurement_preference = "meters";
  window._date_preference = "%m/%d/%Y";
  window._datepicker_preference_format = "mm/dd/yy";
  
  jQuery(document).ready(function() {
    Strava.Util.EventLogging.createInstance("https://analytics.strava.com","7215fa60b5f01ecc3967543619f7e3d9", null);
  });


  //async script load for twitter
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");





  jQuery(document).ready(function(){
    StravaCookieBanner.render();
  });



  window.fbAsyncInit = function() {
    FB.init({
      appId: "284597785309",
      status: true,
      cookie: true,
      xfbml: true,
      version: "v2.12"
    });
    Strava.Facebook.PermissionsManager.getInstance().facebookReady();
    jQuery('#fb-root').trigger('facebook:init');
  };
  (function(d){
    var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
    if (d.getElementById(id)) {return;}
    js = d.createElement('script'); js.id = id; js.async = true;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    ref.parentNode.insertBefore(js, ref);
  }(document));


  jQuery('document').ready(function() {
    setTimeout(function() {
      jQuery('#face-pile').css('visibility', 'visible');
    }, 300);
  });
  var ua = navigator.userAgent;
  var checker = {
    ios: ua.match(/(iPhone|iPod|iPad)/),
    android: ua.match(/Android/)
  };
  
  var regButton = jQuery('#get-started-button');
  if (checker.android || checker.ios) {
    regUrl = regButton.attr('href');
    if (checker.android) {
      regUrl = 'https://market.android.com/details?id=com.strava';
    } else if (checker.ios) {
      regUrl = 'http://itunes.apple.com/app/strava-cycling/id426826309';
    }
    regButton.attr('href', regUrl).text('Get the App');
  }
  regButton.css('visibility', 'visible');


  var currentAthlete = new Strava.Models.CurrentAthlete({"logged_in":false});
  HAML.globals = function() {
    return {
      currentAthlete: currentAthlete,
      renderPartial: function(name, context) {
        if (context == null) {
          context = this;
        }
        return JST[name](context);
      }
    }
  }


  new Strava.Initializer();




  if ('serviceWorker' in navigator) {
    window.addEventListener('load', function() {
      navigator.serviceWorker.register("/service_worker.js?v=dLlWydWlG8").then(function(registration) {
      }, function(err) {
        console.log('ServiceWorker registration failed: ', err);
      });
    });
  }


  jQuery(document).ready(function() {
    jQuery('a').each(addSegmentAttr);
    jQuery('button').each(addSegmentAttr);
    function addSegmentAttr(index, element){
      var $element = jQuery(element);
      var data = $element.data();
      var external_analytics_event = data.segioevent;
      if (external_analytics_event && external_analytics_event.name) {
        var props = jQuery.extend({}, external_analytics_event);
        delete props.name;
  
        Strava.ExternalAnalytics.trackLink($element, external_analytics_event.name, props);
      }
    }
  
    // Scroll Tracking
    jQuery(document).one('scroll', function(){
      Strava.ExternalAnalytics.track('Page Scrolled', null, null, null);
    });
  });


  (function(){
    var options = {"peek_data":false,"campaign":null,"channel":"mobile web","feature":"athlete show","data":{"strava_deeplink_url":"strava://athletes/44711221"}}
    var peekData = options.peek_data ? options.peek_data : false;
  
    if (true) {
      Strava.BranchIO.data(peekData)
        .done(function(data) {
          if (data && data.has_app) {
            jQuery('#branch-button').text('Open');
          }
        });
    }
  
    Strava.BranchIO.createLink(options)
      .done(function(link) {
        jQuery('.js-download-app-link').attr('href', link);
      })
      .fail(function(err) {
        console.log(err);
        jQuery('#smartbanner-orion').remove();
      });
  })();



  jQuery(document).ready(function() {
    new Strava.Ui.Views.SmartbannerOrionView();
  });


  // Mobile Menu transition handler
  jQuery('.collapsable-nav #container-nav')
    .on('show.bs.collapse', function(){
      jQuery('.smartbanner-content').slideUp(100);
      jQuery('html').addClass('mobile-menu-open');
    })
    .on('hidden.bs.collapse', function(){
      jQuery('.smartbanner-content').slideDown(100);
      jQuery('html').removeClass('mobile-menu-open');
    });




